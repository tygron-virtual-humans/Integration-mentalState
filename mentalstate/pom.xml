<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.github.goalhub</groupId>
  <artifactId>mentalstate</artifactId>
  <!-- only modules are under version control -->
  <version>-</version>
  <packaging>pom</packaging>

  <name>The GOAL Mental State</name>
  <url>https://github.com/goalhub/mentalState</url>
  <description>A set of tools that support an interface to various knowledge representation (KR) technologies. The interface provides support for: (i) processing (e.g., parsing) a KR language, (ii) storage in a related KR database, (iii) actions for querying, and updating a KR database.</description>
  
  <licenses>
  	<license>
    	<name>The GNU General Public License, Version 3.0</name>
    	<url>http://www.gnu.org/licenses/gpl-3.0.txt</url>
  	</license>
  </licenses>
  
  <developers>
    <developer>
      <name>Koen Hindriks</name>
      <email>k.v.hindriks@gmail.com</email>
      <organization>goalhub</organization>
      <organizationUrl>https://github.com/koenhindriks</organizationUrl>
    </developer>
  </developers>
  
  <organization>
  	<name>goalhub</name>
  	<url>https://github.com/goalhub</url>
  </organization>

  <issueManagement>
  	<url>https://github.com/goalhub/mentalState/issues</url>
  	<system>Github Issues</system>
  </issueManagement>
  
  <scm>
  	<connection>scm:git:git@github.com:goalhub/mentalState.git</connection>
  	<developerConnection>scm:git:git@github.com:goalhub/mentalState.git</developerConnection>
  	<url>https://github.com:goalhub/mentalState</url>
  </scm>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  </properties>
  
  <modules>
    <module>mentalStateInterface</module>
    <module>mentalStateFactory</module>
    <module>mentalStateImpl</module>
  </modules>
  
  <repositories>
	<repository>
		<id>goalhub-mvn-repo</id>
		<url>https://raw.github.com/goalhub/mvn-repo/master</url>
	</repository>
  </repositories>
	
  <distributionManagement>
	<repository>
       	<id>internal.repo</id>
       	<name>Temporary Staging Repository</name>
       	<url>file://${project.build.directory}/mvn-repo</url>
    </repository>
  </distributionManagement>

  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.11</version>
      <scope>test</scope>
    </dependency>
  </dependencies>
    
  <build>
  	<plugins>
  		<plugin>
      		<groupId>org.apache.maven.plugins</groupId>
      		<artifactId>maven-compiler-plugin</artifactId>
      		<version>3.1</version>
      		<configuration>
      			<source>1.7</source>
      			<target>1.7</target>
      		</configuration>
      	</plugin>
      	
      			<plugin>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-deploy-plugin</artifactId>
			<version>2.8.1</version>
			<configuration>
				<altDeploymentRepository>internal.repo::default::file://${project.build.directory}/mvn-repo</altDeploymentRepository>
			</configuration>
		</plugin>
		
		<plugin>
			<groupId>com.github.github</groupId>
			<artifactId>site-maven-plugin</artifactId>
			<version>0.9</version>
			<configuration>
				<!-- git commit message -->
				<message>Maven artifacts for ${project.name} environment version ${project.version}</message>
				<!-- matches distribution management repository url above -->
				<outputDirectory>${project.build.directory}/mvn-repo</outputDirectory>
				<!-- remote branch name -->
				<branch>refs/heads/master</branch>
				<merge>true</merge>
				<includes>
					<include>pom.xml</include>
				</includes>
				<!-- github repo name -->
				<repositoryName>mvn-repo</repositoryName>
				<!-- github organization -->
                <repositoryOwner>goalhub</repositoryOwner>
                <dryrun>true</dryrun>
			</configuration>
            <executions>
            	<!-- run site-maven-plugin's 'site' target as part of the build's normal 'deploy' phase -->
            	<execution>
            		<goals>
            			<goal>site</goal>
            		</goals>
            		<phase>deploy</phase>
            	</execution>
            </executions>
		</plugin>
  	</plugins>
  </build>
</project>